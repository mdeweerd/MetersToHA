---
version: '3.5'


services:
  # . #     #
  # . #     #  #####   #    #  #    #   #####  #    #
  # . #     #  #    #  #    #  ##   #     #    #    #
  # . #     #  #####   #    #  # #  #     #    #    #
  # . #     #  #    #  #    #  #  # #     #    #    #
  # . #     #  #    #  #    #  #   ##     #    #    #
  # .  #####   #####    ####   #    #     #     ####

  # Base image using ubuntu
  meters-to-ha-ubuntu:
    build:
      context: .
      args: [--rm]
      dockerfile: ./Dockerfile
    # user: docker
    working_dir: /workdir
    environment:
      DISPLAY: host.docker.internal:0.0
      NO_AT_BRIDGE: 1
    volumes: [.:/workdir]

  meters-to-ha-run-ubuntu:
    extends: meters-to-ha-ubuntu
    command: ./apps/meters_to_ha/meters_to_ha.py -c ./config.json  --run

  meters-to-ha-ubuntu-veolia:
    extends: meters-to-ha-ubuntu
    command: ./apps/meters_to_ha/meters_to_ha.py --veolia -c ./config.json --run --keep-output


  # . ######
  # . #     #  ######  #####      #      ##    #    #
  # . #     #  #       #    #     #     #  #   ##   #
  # . #     #  #####   #####      #    #    #  # #  #
  # . #     #  #       #    #     #    ######  #  # #
  # . #     #  #       #    #     #    #    #  #   ##
  # . ######   ######  #####      #    #    #  #    #

  # Base image using debian
  meters-to-ha-debian:
    build:
      context: .
      args: [--rm]
      dockerfile: ./DockerfileDebian
    # user: docker
    working_dir: /workdir
    environment:
      DISPLAY: host.docker.internal:0.0
      NO_AT_BRIDGE: 1
    volumes: [.:/workdir]

  meters-to-ha-run-debian:
    extends: meters-to-ha-debian
    command: ./apps/meters_to_ha/meters_to_ha.py -c ./config.json  --run

  meters-to-ha-debian-veolia:
    extends: meters-to-ha-debian
    command: ./apps/meters_to_ha/meters_to_ha.py --veolia -c ./config.json --run --keep-output

  meters-to-ha-debian-trace-veolia:
    extends: meters-to-ha-debian
    command: python3 -m trace --ignore-dir=/usr/lib -t ./apps/meters_to_ha/meters_to_ha.py
      -c ./config.json  --run --display --keep-output --veolia


  # .    #
  # .   # #    #       #####      #    #    #  ######
  # .  #   #   #       #    #     #    ##   #  #
  # . #     #  #       #    #     #    # #  #  #####
  # . #######  #       #####      #    #  # #  #
  # . #     #  #       #          #    #   ##  #
  # . #     #  ######  #          #    #    #  ######
  #

  # Base image using alpine
  meters-to-ha-alpine:
    build:
      context: .
      args: [--rm]
      dockerfile: ./DockerfileAlpine
    # user: docker
    working_dir: /workdir
    environment:
      DISPLAY: host.docker.internal:0.0
      NO_AT_BRIDGE: 1
    volumes:
      - .:/workdir

  # Run script in normal mode
  #
  # Run this using `docker compose run --rm meters-to-ha-run` on the CLI
  meters-to-ha-run:
    extends: meters-to-ha-alpine
    command: ./apps/meters_to_ha/meters_to_ha.py -c ./config.json  --run

  #
  # Standard targets, no debug, no display
  #
  meters-to-ha-veolia:
    extends: meters-to-ha-alpine
    command: ./apps/meters_to_ha/meters_to_ha.py --veolia -c ./config.json --run --keep-output

  # Target to debug decoding and upload to server without getting new data.
  meters-to-ha-veolia-skip-download:
    extends: meters-to-ha-alpine
    command: ./apps/meters_to_ha/meters_to_ha.py --veolia -c ./config.json --run --keep-output --skip-download

  meters-to-ha-veolia-file:
    extends: meters-to-ha-alpine
    command: ./apps/meters_to_ha/meters_to_ha.py --veolia -c ./config.json --run --keep-output --url=file://./veolia_data.csv --server-type=url

  meters-to-ha-veolia-posturl:
    extends: meters-to-ha-alpine
    command: ./apps/meters_to_ha/meters_to_ha.py --veolia -c ./config.json --run --keep-output --url='https://webhook.site/79c1161f-85cf-4d07-9924-1b11cbec2b16' --server-type=url

  meters-to-ha-grdf:
    extends: meters-to-ha-alpine
    command: ./apps/meters_to_ha/meters_to_ha.py --grdf -c ./config.json --run --keep-output

  #
  # Debug targets (requires X-Server)
  #

  # Run script with display and keep the recovered output (data) in a file
  #
  # Run this using `docker compose run --rm meters-to-ha-display-veolia` on the CLI
  meters-to-ha-display-veolia:
    extends: meters-to-ha-alpine
    command: ./apps/meters_to_ha/meters_to_ha.py -c ./config.json --veolia --run --display --keep-output

  meters-to-ha-display-grdf:
    extends: meters-to-ha-alpine
    command: ./apps/meters_to_ha/meters_to_ha.py -c ./config.json --grdf --run --display --keep-output

  meters-to-ha-display-local:
    extends: meters-to-ha-alpine
    command: ./apps/meters_to_ha/meters_to_ha.py -c ./config.json --run --display --keep-output --local-config

  #
  # Trace targets (requires X-Server, outputs executed code lines)
  #
  #
  meters-to-ha-trace-veolia:
    extends: meters-to-ha-alpine
    command: python3 -m trace --ignore-dir=/usr/lib -t ./apps/meters_to_ha/meters_to_ha.py
      -c ./config.json  --run --display --keep-output --veolia

  meters-to-ha-trace-grdf:
    extends: meters-to-ha-alpine
    command: python3 -m trace --ignore-dir=/usr/lib -t ./apps/meters_to_ha/meters_to_ha.py
      -c ./config.json  --run --display --keep-output --grdf


  #
  # Debug target using WSL X-Server
  #  Note: Not very stable - works first time, Windows'X-Server seems to fail after that.
  #
  meters-to-ha-wind:
    extends: meters-to-ha-display-local
    environment:
      DISPLAY: :0
    command: >
       sh -c '
         i=0 ; while [ -f /tmp/.X$$i-lock ] ; do i=$$((i+1))  ; done ; echo $$i ;
         DISPLAY=:$$i ./apps/meters_to_ha/meters_to_ha.py -c ./config.json --run --display --keep-output --local-config --veolia
       '
    volumes:
      - \\wsl.localhost\Debian\mnt\wslg\.X11-unix:/tmp/.X11-unix
      - \\wsl.localhost\Debian\mnt\wslg\PulseServer:/tmp/PulseServer
      - \\wsl.localhost\Debian\mnt\wslg\PulseAudioRDPSink:/tmp/PulseAudioRDPSink
      - \\wsl.localhost\Debian\mnt\wslg\PulseAudioRDPSource:/tmp/PulseAudioRDPSource
